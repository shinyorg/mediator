//HintName: TestAssembly_RequestExecutor.g.cs
// <auto-generated>
// Code generated by Shiny Mediator Source Generator.
// </auto-generated>
#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;

namespace TestAssembly;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.SourceGenerators", "4.0.0")]
internal class TestAssemblyRequestExecutor : global::Shiny.Mediator.Infrastructure.RequestExecutor
{
    public override async global::System.Threading.Tasks.Task<TResult> Request<TResult>(
        global::Shiny.Mediator.IMediatorContext context,
        global::Shiny.Mediator.IRequest<TResult> request,
        global::System.Threading.CancellationToken cancellationToken)
    {
        if (request is global::MyApp.GetDataRequest p0)
        {
            object result = await this.Execute<global::MyApp.GetDataRequest, global::MyApp.DataResponse>(p0, context, cancellationToken);
            return (TResult)result;
        }

        throw new global::System.InvalidOperationException("Unknown request type");
    }

    public override bool CanHandle<TResult>(global::Shiny.Mediator.IRequest<TResult> request)
    {
        if (request is global::MyApp.GetDataRequest)
            return true;

        return false;
    }
}
