//HintName: TestAssembly_StreamRequestExecutor.g.cs
// <auto-generated>
// Code generated by Shiny Mediator Source Generator.
// </auto-generated>
#nullable disable

using System;
using System.Collections.Generic;
using System.Threading;

namespace TestAssembly;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.SourceGenerators", "5.0.0")]
internal class TestAssemblyStreamRequestExecutor : global::Shiny.Mediator.Infrastructure.StreamRequestExecutor
{
    public override global::System.Collections.Generic.IAsyncEnumerable<TResult> Request<TResult>(
        global::Shiny.Mediator.IMediatorContext context,
global::Shiny.Mediator.IStreamRequest<TResult> request,
        global::System.Threading.CancellationToken cancellationToken)
    {
      if (request is global::MyApp.EventStreams.EventStreamRequest p0)
        {
   var handle = this.Execute<global::MyApp.EventStreams.EventStreamRequest, global::MyApp.EventStreams.EventData>(context, p0, cancellationToken);
       return (global::System.Collections.Generic.IAsyncEnumerable<TResult>)handle;
 }

        throw new global::System.InvalidOperationException("Unknown request type");
    }

    public override bool CanRequest<TResult>(global::Shiny.Mediator.IStreamRequest<TResult> request)
    {
        if (request is global::MyApp.EventStreams.EventStreamRequest)
        return true;

        return false;
    }
}
