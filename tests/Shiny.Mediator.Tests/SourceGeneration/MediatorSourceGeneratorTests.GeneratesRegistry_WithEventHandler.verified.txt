{
  Generator: {},
  GeneratedSources: [
    {
      HintName: MediatorAttributes.g.cs,
      Source:
// <auto-generated>
// Code generated by Shiny Mediator Source Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable disable

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.SourceGenerators", "5.0.0")]
[global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false)]
internal sealed class MediatorSingletonAttribute : global::System.Attribute
{
}

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.SourceGenerators", "5.0.0")]
[global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false)]
internal sealed class MediatorScopedAttribute : global::System.Attribute
{
}
    },
    {
      HintName: TestAssembly_Registry.g.cs,
      Source:
// <auto-generated>
// Code generated by Shiny Mediator Source Generator.
// </auto-generated>
#nullable disable

using Shiny.Mediator;
using Microsoft.Extensions.DependencyInjection;

namespace TestAssembly;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.SourceGenerators", "5.0.0")]
internal static class __ShinyMediatorRegistry
{
    public static global::Shiny.Mediator.ShinyMediatorBuilder AddMediatorRegistry(this global::Shiny.Mediator.ShinyMediatorBuilder builder)
    {
        builder.Services.AddMediatorRegistry();
        return builder;
    }

    public static global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddMediatorRegistry(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services)
    {
        services.AddSingletonAsImplementedInterfaces<global::TestApp.MyEventHandler>();

        return services;
    }
}

    }
  ],
  Diagnostics: null
}