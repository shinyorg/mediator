{
  MediatorEndpoints.g.cs:
// <auto-generated>
// Code generated by Shiny Mediator ASP.NET Source Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
namespace TestAssembly;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Shiny.Mediator.AspNet.SourceGenerators", "4.0.0")]
public static class MediatorEndpoints
{
    /// <summary>
    /// Maps all generated mediator endpoints
    /// </summary>
    public static global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder MapGeneratedMediatorEndpoints(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder)
    {

        // Group: /api
        var group__api = builder.MapGroup("/api");

        // GroupedHandler - GetUser
        group__api.MapGet(
            "/users/{id}",
            async (
                [global::Microsoft.AspNetCore.Mvc.FromServices] global::Shiny.Mediator.IMediator mediator,
                [global::Microsoft.AspNetCore.Http.AsParameters] Test.GetUserRequest request,
                global::System.Threading.CancellationToken cancellationToken
            ) =>
            {
                var result = await mediator
                    .Request(request, cancellationToken)
                    .ConfigureAwait(false);
                return global::Microsoft.AspNetCore.Http.TypedResults.Ok(result.Result);
            }
        )
            .WithName("GetUser")
        ;

        // GroupedHandler - CreateUser
        group__api.MapPost(
            "/users",
            async (
                [global::Microsoft.AspNetCore.Mvc.FromServices] global::Shiny.Mediator.IMediator mediator,
                [global::Microsoft.AspNetCore.Mvc.FromBody] Test.CreateUserCommand command,
                global::System.Threading.CancellationToken cancellationToken
            ) =>
            {
                await mediator
                    .Send(command, cancellationToken)
                    .ConfigureAwait(false);
                return global::Microsoft.AspNetCore.Http.Results.Ok();
            }
        )
            .WithName("CreateUser")
        ;
        return builder;
    }
}

}