//HintName: MyTests.g.cs
/// <summary>
/// This file is generated by Shiny.Mediator source generation
/// Do not modify this file directly
/// </summary>
namespace MyTests;

public enum EntityType
{
    DESTINATION,
    PARK,
    ATTRACTION,
    RESTAURANT,
    HOTEL,
    SHOW,
}

public enum LiveStatusType
{
    OPERATING,
    DOWN,
    CLOSED,
    REFURBISHMENT,
}

public enum ReturnTimeState
{
    AVAILABLE,
    TEMP_FULL,
    FINISHED,
}

public enum BoardingGroupState
{
    AVAILABLE,
    PAUSED,
    CLOSED,
}

public partial class PriceData
{
    [global::System.Text.Json.Serialization.JsonPropertyName("amount")]
    public double Amount { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("currency")]
    public string Currency { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("formatted")]
    public string Formatted { get; set; }

}

public partial class LiveQueueStandby
{
    [global::System.Text.Json.Serialization.JsonPropertyName("waitTime")]
    public double WaitTime { get; set; }

}

public partial class LiveQueueSingleRider
{
    [global::System.Text.Json.Serialization.JsonPropertyName("waitTime")]
    public double? WaitTime { get; set; }

}

public partial class LiveQueueReturnTime
{
    [global::System.Text.Json.Serialization.JsonPropertyName("state")]
    public global::MyTests.ReturnTimeState State { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("returnStart")]
    public System.DateTimeOffset? ReturnStart { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("returnEnd")]
    public System.DateTimeOffset? ReturnEnd { get; set; }

}

public partial class LiveQueuePaidReturnTime
{
    [global::System.Text.Json.Serialization.JsonPropertyName("state")]
    public global::MyTests.ReturnTimeState State { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("returnStart")]
    public System.DateTimeOffset? ReturnStart { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("returnEnd")]
    public System.DateTimeOffset? ReturnEnd { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("price")]
    public global::MyTests.PriceData Price { get; set; }

}

public partial class LiveQueueBoardingGroup
{
    [global::System.Text.Json.Serialization.JsonPropertyName("allocationStatus")]
    public global::MyTests.BoardingGroupState AllocationStatus { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("currentGroupStart")]
    public double? CurrentGroupStart { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("currentGroupEnd")]
    public double? CurrentGroupEnd { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("nextAllocationTime")]
    public System.DateTimeOffset? NextAllocationTime { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("estimatedWait")]
    public double? EstimatedWait { get; set; }

}

public partial class LiveQueuePaidStandby
{
    [global::System.Text.Json.Serialization.JsonPropertyName("waitTime")]
    public double? WaitTime { get; set; }

}

public partial class LiveQueue
{
    [global::System.Text.Json.Serialization.JsonPropertyName("STANDBY")]
    public LiveQueueStandby Standby { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("SINGLE_RIDER")]
    public LiveQueueSingleRider SingleRider { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("RETURN_TIME")]
    public LiveQueueReturnTime ReturnTime { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("PAID_RETURN_TIME")]
    public LiveQueuePaidReturnTime PaidReturnTime { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("BOARDING_GROUP")]
    public LiveQueueBoardingGroup BoardingGroup { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("PAID_STANDBY")]
    public LiveQueuePaidStandby PaidStandby { get; set; }

}

public partial class LiveShowTime
{
    [global::System.Text.Json.Serialization.JsonPropertyName("type")]
    public string Type { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("startTime")]
    public System.DateTimeOffset? StartTime { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("endTime")]
    public System.DateTimeOffset? EndTime { get; set; }

}

public partial class DiningAvailability
{
    [global::System.Text.Json.Serialization.JsonPropertyName("partySize")]
    public double? PartySize { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("waitTime")]
    public double? WaitTime { get; set; }

}

public partial class TagData
{
    [global::System.Text.Json.Serialization.JsonPropertyName("tag")]
    public string Tag { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("tagName")]
    public string TagName { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

}

public partial class EntityDataLocation
{
    [global::System.Text.Json.Serialization.JsonPropertyName("latitude")]
    public double Latitude { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("longitude")]
    public double Longitude { get; set; }

}

public partial class EntityData
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("entityType")]
    public global::MyTests.EntityType EntityType { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("parentId")]
    public string? ParentId { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("destinationId")]
    public string? DestinationId { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("timezone")]
    public string Timezone { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("location")]
    public EntityDataLocation Location { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("tags")]
    public global::System.Collections.Generic.List<global::MyTests.TagData> Tags { get; set; }

}

public partial class EntityChildLocation
{
    [global::System.Text.Json.Serialization.JsonPropertyName("latitude")]
    public double? Latitude { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("longitude")]
    public double? Longitude { get; set; }

}

public partial class EntityChild
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("entityType")]
    public global::MyTests.EntityType EntityType { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("externalId")]
    public string ExternalId { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("parentId")]
    public string ParentId { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("location")]
    public EntityChildLocation Location { get; set; }

}

public partial class EntityChildrenResponse
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("entityType")]
    public global::MyTests.EntityType EntityType { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("timezone")]
    public string Timezone { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("children")]
    public global::System.Collections.Generic.List<global::MyTests.EntityChild> Children { get; set; }

}

public partial class EntityLiveData
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("entityType")]
    public global::MyTests.EntityType EntityType { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("status")]
    public global::MyTests.LiveStatusType Status { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("lastUpdated")]
    public System.DateTimeOffset LastUpdated { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("queue")]
    public global::MyTests.LiveQueue Queue { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("showtimes")]
    public global::System.Collections.Generic.List<global::MyTests.LiveShowTime> Showtimes { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("operatingHours")]
    public global::System.Collections.Generic.List<global::MyTests.LiveShowTime> OperatingHours { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("diningAvailability")]
    public global::System.Collections.Generic.List<global::MyTests.DiningAvailability> DiningAvailability { get; set; }

}

public partial class EntityLiveDataResponse
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("entityType")]
    public global::MyTests.EntityType EntityType { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("timezone")]
    public string Timezone { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("liveData")]
    public global::System.Collections.Generic.List<global::MyTests.EntityLiveData> LiveData { get; set; }

}

public enum SchedulePriceObjectType
{
    ADMISSION,
    PACKAGE,
    ATTRACTION,
}

public partial class SchedulePriceObject
{
    [global::System.Text.Json.Serialization.JsonPropertyName("type")]
    public SchedulePriceObjectType Type { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("price")]
    public global::MyTests.PriceData Price { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("available")]
    public bool Available { get; set; }

}

public enum ScheduleEntryType
{
    OPERATING,
    TICKETED_EVENT,
    PRIVATE_EVENT,
    EXTRA_HOURS,
    INFO,
}

public partial class ScheduleEntry
{
    [global::System.Text.Json.Serialization.JsonPropertyName("date")]
    public string Date { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("openingTime")]
    public System.DateTimeOffset OpeningTime { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("closingTime")]
    public System.DateTimeOffset ClosingTime { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("type")]
    public ScheduleEntryType Type { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("purchases")]
    public global::System.Collections.Generic.List<global::MyTests.SchedulePriceObject> Purchases { get; set; }

}

public partial class EntityScheduleResponse
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("entityType")]
    public global::MyTests.EntityType EntityType { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("timezone")]
    public string Timezone { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("schedule")]
    public global::System.Collections.Generic.List<global::MyTests.ScheduleEntry> Schedule { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("parks")]
    public global::System.Collections.Generic.List<global::MyTests.EntityScheduleResponse> Parks { get; set; }

}

public partial class DestinationParkEntry
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

}

public partial class DestinationEntry
{
    [global::System.Text.Json.Serialization.JsonPropertyName("id")]
    public string Id { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("name")]
    public string Name { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("slug")]
    public string Slug { get; set; }

    [global::System.Text.Json.Serialization.JsonPropertyName("parks")]
    public global::System.Collections.Generic.List<global::MyTests.DestinationParkEntry> Parks { get; set; }

}

public partial class DestinationsResponse
{
    [global::System.Text.Json.Serialization.JsonPropertyName("destinations")]
    public global::System.Collections.Generic.List<global::MyTests.DestinationEntry> Destinations { get; set; }

}

[global::Shiny.Mediator.Http.HttpAttribute(global::Shiny.Mediator.Http.HttpVerb.Get, "/destinations")]
public partial class GetDestinations : global::Shiny.Mediator.Http.IHttpRequest<global::MyTests.DestinationsResponse>
{
}

[global::Shiny.Mediator.Http.HttpAttribute(global::Shiny.Mediator.Http.HttpVerb.Get, "/entity/{entityID}")]
public partial class GetEntity : global::Shiny.Mediator.Http.IHttpRequest<global::MyTests.EntityData>
{
    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "entityID")]
    public string EntityID { get; set; }

}

[global::Shiny.Mediator.Http.HttpAttribute(global::Shiny.Mediator.Http.HttpVerb.Get, "/entity/{entityID}/children")]
public partial class GetEntityChildren : global::Shiny.Mediator.Http.IHttpRequest<global::MyTests.EntityChildrenResponse>
{
    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "entityID")]
    public string EntityID { get; set; }

}

[global::Shiny.Mediator.Http.HttpAttribute(global::Shiny.Mediator.Http.HttpVerb.Get, "/entity/{entityID}/live")]
public partial class GetEntityLiveData : global::Shiny.Mediator.Http.IHttpRequest<global::MyTests.EntityLiveDataResponse>
{
    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "entityID")]
    public string EntityID { get; set; }

}

[global::Shiny.Mediator.Http.HttpAttribute(global::Shiny.Mediator.Http.HttpVerb.Get, "/entity/{entityID}/schedule")]
public partial class GetEntityScheduleUpcoming : global::Shiny.Mediator.Http.IHttpRequest<global::MyTests.EntityScheduleResponse>
{
    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "entityID")]
    public string EntityID { get; set; }

}

[global::Shiny.Mediator.Http.HttpAttribute(global::Shiny.Mediator.Http.HttpVerb.Get, "/entity/{entityID}/schedule/{year}/{month}")]
public partial class GetEntityScheduleYearMonth : global::Shiny.Mediator.Http.IHttpRequest<global::MyTests.EntityScheduleResponse>
{
    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "entityID")]
    public string EntityID { get; set; }

    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "year")]
    public double Year { get; set; }

    [global::Shiny.Mediator.Http.HttpParameterAttribute(global::Shiny.Mediator.Http.HttpParameterType.Path, "month")]
    public double Month { get; set; }

}

